from django.core.management import BaseCommand
from loguru import logger

from spending.models import ProjectSettings, SpendingCategory


class Command(BaseCommand):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.
    """
    def handle(self, *args, **options):
        logger.info(f'–°—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥—ã –ø–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—é –ë–î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.')

        # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã ProjectSettings
        proj_settings_data = (
            ('bot_admin', '1978587604'),
            ('bot_admin', '1196122460'),
        )
        for i_key, i_value in proj_settings_data:
            i_obj, created = ProjectSettings.objects.get_or_create(
                key=i_key, value=i_value,
                defaults={
                    'key': i_key,
                    'value': i_value,
                }
            )
            logger.success(f'–ó–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ ProjectSettings —Å key={i_key} value={i_value}'
                           f'{"–±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞" if created else "—É–∂–µ –µ—Å—Ç—å"}.')

        # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã SpendingCategory
        spend_category_data = (
            'üöç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç/–ø–æ–µ–∑–¥–∫–∏',
            'ü•î –ø—Ä–æ–¥—É–∫—Ç—ã',
            'üçï –Ω–∏—à—Ç—è–∫–∏ (–µ–¥–∞/–≤–æ–¥–∞)',
            'ü™Ä –±–µ–∑–¥–µ–ª—É—à–∫–∏ (—á–µ—Ö–æ–ª –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Ç.–ø.)',
            'üçΩÔ∏è –∫–∞—Ñ–µ—à–∫–∏, —Ä–µ—Å—Ç–∏–∫–∏',
            'üõçÔ∏è –æ–¥–µ–∂–¥–∞, –æ–±—É–≤—å, —Å—É–º–∫–∏',
            'üß¥ –±—ã—Ç–æ–≤–∞—è —Ö–∏–º–∏—è –∏ –≥–∏–≥–∏–µ–Ω–∞',
            'üíä –∞–ø—Ç–µ–∫–∞',
            'ü©∫ –∑–¥–æ—Ä–æ–≤—å–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–∏—ë–º –≤—Ä–∞—á–∞)',
            'üíá —É—Ö–æ–¥ –∑–∞ —Å–æ–±–æ–π',
            'üçø —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è (–∫–∏–Ω–æ,–≤–∏–Ω–æ,–¥–æ–º–∏–Ω–æ)',
            'üìö –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (–∫—É—Ä—Å—ã, –∫–Ω–∏–∂–∫–∏)',
            'üì° —Å–≤—è–∑—å, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç',
            'üö∞ –∫–æ–º–º—É–Ω–∞–ª–∫–∞',
            'üê∂ –ø–∏—Ç–æ–º—Ü—ã',
            'üíµ –∫—Ä–µ–¥–∏—Ç—ã/–¥–æ–ª–≥–∏',
            'üöó –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∞–≤—Ç–æ',
            'üõãÔ∏è –º–µ–±–µ–ª—å, –±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞',
            'üî® —Ä–µ–º–æ–Ω—Ç —Ö–∞—Ç—ã (–æ–±–æ–∏, —Ä–æ–∑–µ—Ç–∫–∏, —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞ –∏ —Ç.–ø.)',
            'üìù –¥—Ä—É–≥–æ–µ',
        )
        for i_cat in spend_category_data:
            i_obj, created = SpendingCategory.objects.get_or_create(
                name=i_cat,
                defaults={
                    'name': i_cat,
                }
            )
            logger.success(f'–ó–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ SpendingCategory —Å name={i_cat} '
                           f'{"–±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞" if created else "—É–∂–µ –µ—Å—Ç—å"}.')
        logger.info(f'–ö–æ–º–∞–Ω–¥–∞ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ –ë–î –∑–∞–∫–æ–Ω—á–∏–ª–∞ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É!')
